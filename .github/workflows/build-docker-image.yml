name: Build Docker Image with RIEGL Libraries

on:
  push:
    branches: [ main ]
    paths:
      - '.devcontainer/Dockerfile'
      - 'setup.py'
      - 'src/**'
      - 'pylidar_tls_canopy/**'
  workflow_dispatch: # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      # Decrypt RIEGL libraries from encrypted files in repository
      - name: Decrypt RIEGL libraries
        env:
          DECRYPTION_PASSPHRASE: ${{ secrets.DECRYPTION_PASSPHRASE }}
        run: |
          mkdir -p .riegl_libs

          # Decrypt RiVLib if encrypted file exists
          if [ -f .riegl_libs/rivlib.tar.gz.gpg ]; then
            echo "Decrypting RiVLib..."
            echo "$DECRYPTION_PASSPHRASE" | gpg --decrypt --batch --passphrase-fd 0 \
              .riegl_libs/rivlib.tar.gz.gpg > .riegl_libs/rivlib.tar.gz

            # Extract archive
            tar -xzf .riegl_libs/rivlib.tar.gz -C .riegl_libs/
            echo "✓ RiVLib decrypted and extracted"
          else
            echo "Warning: .riegl_libs/rivlib.tar.gz.gpg not found"
          fi

          # Decrypt RDBLib if encrypted file exists
          if [ -f .riegl_libs/rdblib.tar.gz.gpg ]; then
            echo "Decrypting RDBLib..."
            echo "$DECRYPTION_PASSPHRASE" | gpg --decrypt --batch --passphrase-fd 0 \
              .riegl_libs/rdblib.tar.gz.gpg > .riegl_libs/rdblib.tar.gz

            # Extract archive
            tar -xzf .riegl_libs/rdblib.tar.gz -C .riegl_libs/
            echo "✓ RDBLib decrypted and extracted"
          else
            echo "Warning: .riegl_libs/rdblib.tar.gz.gpg not found"
          fi

          # List decrypted contents
          echo "Decrypted library directories:"
          ls -la .riegl_libs/

      # Alternative: Download from private cloud storage (uncomment if using)
      # - name: Download RIEGL libraries from private storage
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: |
      #     mkdir -p .riegl_libs
      #     aws s3 cp s3://your-private-bucket/riegl-libs/rivlib.tar.gz.gpg .riegl_libs/
      #     aws s3 cp s3://your-private-bucket/riegl-libs/rdblib.tar.gz.gpg .riegl_libs/
      #     # Then decrypt as above
      #     cd .riegl_libs && tar -xzf rivlib.tar.gz && tar -xzf rdblib.tar.gz

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .devcontainer/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "rivlib_path=.riegl_libs/rivlib"
            "rdblib_path=.riegl_libs/rdblib"

      - name: Clean up RIEGL libraries
        if: always()
        run: |
          rm -rf .riegl_libs
